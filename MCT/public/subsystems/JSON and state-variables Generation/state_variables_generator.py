f = open("flow_data.txt", "r");

fields = [];
list = {};

# creates a list of all all the fields listed in "flow_data.txt"
def makeFieldList():
    for x in f:
        p = 0;
        i = x.find("\"");
        if i != -1:
            p = 1;
        while p == 1:
            i = x.find("\"");
            x = x[i+1:]
            i = x.find("\"");
            if i != -1:
                sub= x[:i];
                fields.append(contents(sub));
                x = x[i+1:];
            i = x.find("\"");

            if i == -1:
                p = 0;

#returns the contents/levels of a state (subsystem, object, state, etc.) as elements in a list
def contents(f):
    c = [];
    i = f.find(".");
    if(i != -1):
        sub = f[:i];
        c.append(sub);
        f = f[i+1:];
        i = f.find(".");
        if(i != -1):
            sub = f[:i];
            c.append(sub);
            f = f[i+1:];
            i = f.find(".");
            if(i != -1):
                sub = f[:i];
                c.append(sub);
                f = f[i+1:];
                c.append(f);
            else:
                c.append(f);
        else:
            c.append(f);
    else:
        c.append(f);

    return c;

# creates a dictionary versin of the list organized in levels (this is the dictionary used by "json_file_generator")

def createList():
    print(fields);

    for f in fields:
        print(f);
        if(len(f) == 4):
            if f[0] in list:
                if f[1] in list[f[0]]:
                    if f[2] in list[f[0]][f[1]]:
                        if f[3] in list[f[0]][f[1]][f[2]]:
                            print("already in list");
                        else:
                            list[f[0]][f[1]][f[2]][f[3]] = "";
                    else:
                        list[f[0]][f[1]][f[2]] = {};
                        list[f[0]][f[1]][f[2]][f[3]] = "";
                else:
                    list[f[0]][f[1]] = {};
                    list[f[0]][f[1]][f[2]] = {};
                    list[f[0]][f[1]][f[2]][f[3]] = "";
            else:
                list[f[0]] = {};
                list[f[0]][f[1]] = {};
                list[f[0]][f[1]][f[2]] = {};
                list[f[0]][f[1]][f[2]][f[3]] = "";
        if(len(f) == 3):
            if f[0] in list:
                if f[1] in list[f[0]]:
                    if f[2] in list[f[0]][f[1]]:
                        print("already in list");
                    else:
                        list[f[0]][f[1]][f[2]] = "";
                else:
                    list[f[0]][f[1]] = {};
                    list[f[0]][f[1]][f[2]] = "";
            else:
                list[f[0]] = {};
                list[f[0]][f[1]] = {};
                list[f[0]][f[1]][f[2]] = "";
        elif(len(f) == 2):
            if f[0] in list:
                if f[1] in list[f[0]]:
                    print("already in list");
                else:
                    list[f[0]][f[1]] = "";
            else:
                list[f[0]] = {};
                list[f[0]][f[1]] = "";
        elif(len(f) == 1):
            if f[0] in list:
                print("already in list");
            else:
                list[f[0]] = "";

# writes the dictionary out into the form needed for state-variables in "state-variables.js"

def printList():
    sv = open("state-variables.js", "w");
    sv.write("//This file was AUTOGENERATED from the script '/state_variables_generator.py' and represents all the initial values of states in OpenMCT\n");
    sv = open("state-variables.js", "a");
    sv.write("\n");
    sv.write("module.exports= {\n");
    for keys in list:
        if(len(list[keys]) != 0):
            sv.write("\t" + keys + ": {\n")
            for key2 in list[keys]:
                if(len(list[keys][key2]) != 0):
                    sv.write("\t\t" + key2 + ": {\n");
                    for key3 in list[keys][key2]:
                        if(len(list[keys][key2][key3]) !=0):
                            sv.write("\t\t\t" + key3 + ": {\n");
                            for key4 in list[keys][key2][key3]:
                                if(len(list[keys][key2][key3][key4]) !=0):
                                    sv.write("\t\t\t\t" + key4 + ": {\n");
                                else:
                                    sv.write("\t\t\t\t" + key4 + ": _____,\n");
                            sv.write("\t\t\t},\n")
                        else:
                            sv.write("\t\t\t" + key3 + ": _____,\n");
                    sv.write("\t\t},\n")
                else:
                    sv.write("\t\t" + key2 + ": _____,\n");
            if(keys == "piksi_fh"):
                sv.write("\t}\n");
            else:
                sv.write("\t},\n")
        else:
            sv.write("\t" + keys + ": _____,\n");
    sv.write("}\n");
    sv.close();

makeFieldList();
createList();
printList();
